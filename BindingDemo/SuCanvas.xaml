<UserControl x:Class="BindingDemo.SuCanvas"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BindingDemo"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:MyShapeModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="32"/>
        </Grid.RowDefinitions>

        <!-- 
        1. 包装的元素需要添加ClipToBounds="True"属性，这样当放大时，内部Canvas超出包装元素的时候，超出部分就会被裁剪掉；
        2. 把Canvas元素的初始大小设置为与包装元素一样大小，可以通过RelativeSource来设置；
        3. 将外包包装元素的背景和Canvas的背景设置为一样的背景，这样当Canvas缩小的时候，不会给然感觉Canvas画布真的小了；
        4. 用鼠标事件控制放大缩小的话，可以使用隧道事件，且事件应该关联在外部包装元素Border上。放大或缩小的时候，放大缩小中心点（CenterX,CenterY)用的不是Canvas的坐标点，而是外部包装元素的坐标点；
        5. 按理说所有元素的变换都是针对自身的坐标体系的，而不是针对外部父元素的坐标体系的，但是WPF有个特点，虽然时针对自身坐标系的变化，但是变换前后自身的ActualWidth和ActualHeight都没有发生任何变化，下次继续变换的时候，还是用的ActualWidth和ActualHeigth作为自身坐标系的参考用途，而不是按照变换后的实际尺寸在定位自身坐标系尺寸的。所以，使用外部包装元素的坐标系来给定每次变换的（CenterX和CenterY）才符合视觉效果。
        -->
        <Border x:Name="bdMain" Grid.Row="0" Background="AliceBlue" ClipToBounds="True"
                MouseMove="bdMain_MouseMove" MouseRightButtonDown="bdMain_MouseDown" MouseRightButtonUp="bdMain_MouseUp" 
                MouseWheel="bdMain_MouseWheel">
            <ItemsControl x:Name="ic" ItemsSource="{Binding MyShapes}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="cvsMain" Background="AliceBlue" 
                                Loaded="cvsMain_Loaded" 
                                MouseMove="cvsMain_MouseMove"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Top" Value="{Binding Top}"/>
                        <Setter Property="Canvas.Left" Value="{Binding Left}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:MyShape Radius="{Binding Radius}" Stroke="{Binding Stroke}" StrokeThickness="{Binding Thickness}" 
                                   ToolTip="{Binding Id}" Tag="{Binding Id}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        <DockPanel LastChildFill="True" Grid.Row="1">
            <ContentControl Name="cttPos" Content="x, y" Width="100" Height="32" FontSize="20" Background="White" DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
            <ContentControl></ContentControl>
        </DockPanel>
    </Grid>
</UserControl>
